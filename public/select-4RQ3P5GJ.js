import{f as o,g as r}from"./chunk-YTPAW67S.js";var a="* { margin: 0; padding: 0; border: 0; background: transparent; box-sizing: border-box; font-family: var(--font-family); } .select { position: relative; display: inline-block; width: 100%; } .trigger { cursor: pointer; background: var(--background-secondary); width: 100%; height: 60px; color: var(--text-primary); border-radius: 500px; display: flex; flex-direction: row; align-items: center; justify-content: space-between; padding: 20px; -webkit-user-select: none; -moz-user-select: none; user-select: none; } .icon { height: 40px; width: 40px; border-radius: 500px; background: var(--background-primary); display: flex; justify-content: center; align-items: center; } .icon huanlin-icon { --fill: var(--text-primary); --height: 24px; } .popup { display: none; position: absolute; top: 64px; left: 0px; flex-direction: column; background: var(--background-secondary); box-shadow: var(--popover-shadow); padding: 10px; width: 100%; border-radius: 20px; gap: 6px; z-index: 1; } .popup.active { display: flex; }";var l=0,n=class extends HTMLElement{constructor(){super();o(this,"handleTriggerClick",e=>{let t=this.shadowRoot.querySelector(".popup");t.classList.contains("active")?t.classList.remove("active"):t.classList.add("active")});o(this,"handlePopoverClick",e=>{let t=e.target.closest("huanlin-option");t&&this.setActiveOption(t.name),this.focusTrigger(),this.hide()});o(this,"willLoad",()=>{var e,t,s,i;this.triggerEle=this.shadowRoot.querySelector(".trigger"),(e=this.triggerEle)==null||e.addEventListener("click",this.handleTriggerClick),this.popoverEle=this.shadowRoot.querySelector(".popup"),(t=this.popoverEle)==null||t.addEventListener("click",this.handlePopoverClick),(s=this.triggerEle)==null||s.addEventListener("keydown",this.handleKeyboard),(i=this.popoverEle)==null||i.addEventListener("keydown",this.handleOptionArrow),this.labelEle=this.shadowRoot.querySelector(".label"),this.addEventListener("keydown",this.handleCloseKeyboard),document.addEventListener("click",this.handleClickOutside)});o(this,"setActiveOption",e=>{customElements.whenDefined("huanlin-option").then(()=>{let t=Array.from(this.querySelectorAll("huanlin-option")),s;t.forEach(i=>{i.name===e?(s=i,i.setAttribute("active","")):i.removeAttribute("active")}),s&&this.setLabel(s.innerHTML)})});o(this,"setLabel",e=>r(this,null,function*(){this.labelEle&&(this.labelEle.innerHTML=e)}));o(this,"handleOptionArrow",e=>{if(e.key==="ArrowDown"){let t=this.getOptions(),i=t.indexOf(e.target)+1;if(i<0||i>=t.length)return;t[i].setFocus()}else if(e.key==="ArrowUp"){let t=this.getOptions(),i=t.indexOf(e.target)-1;if(i<0||i>=t.length)return;t[i].setFocus()}else e.key==="Enter"&&(this.setActiveOption(e.target.name),e.target.click(),this.hide(),this.focusTrigger())});o(this,"getOptions",()=>Array.from(this.querySelectorAll("huanlin-option")));o(this,"handleCloseKeyboard",e=>{e.key==="Escape"?(this.hide(),this.focusTrigger()):(e.key==="Tab"||e.shiftKey&&e.key==="Tab")&&this.hide()});o(this,"focusTrigger",()=>{this.triggerEle.focus()});o(this,"handleKeyboard",e=>{if(["ArrowDown"," ","Enter"].includes(e.key)){this.show();let t=this.getOptions();t.length&&t[0].setFocus()}});o(this,"handleClickOutside",e=>{e.composedPath().includes(this)||this.popoverEle.classList.remove("active")});o(this,"show",()=>{let e=this.popoverEle;this.triggerEle.setAttribute("aria-expanded",!0),e.classList.add("active")});o(this,"hide",()=>{let e=this.popoverEle;this.triggerEle.setAttribute("aria-expanded",!1),e.classList.remove("active")});let e=this.attachShadow({mode:"open"}),t=new CSSStyleSheet;t.replaceSync(a),e.adoptedStyleSheets=[t];let s=`select-listbox-${++l}`,i=`select-listbox-${++l}`;e.innerHTML=`
      <div class="select">
        <div 
          class="trigger" 
          tabindex="0" 
          role="combobox" 
          aria-haspopup="listbox"
          aria-expanded="false"
          aria-labelledby=${i}
          aria-controls=${s}
        >
          <span class="label" id=${i}>
            <slot name="trigger">about me</slot>
          </span>
          <span class="icon">
            <huanlin-icon name="arrow-down"></huanlin-icon>
          </span>
        </div>
        <div class="popup" role="listbox" id="${s}">
          <slot></slot>
        </div>
      </div>
    `}connectedCallback(){this.classList.add("hydrated"),setTimeout(()=>{this.willLoad()})}static get observedAttributes(){return["value"]}attributeChangedCallback(e,t,s){e==="value"&&this.setActiveOption(s)}disconnectedCallback(){var e,t,s;(e=this.triggerEle)==null||e.removeEventListener("click",this.handleTriggerClick),(t=this.popoverEle)==null||t.removeEventListener("click",this.handlePopoverClick),document.removeEventListener("click",this.handleClickOutside),this.removeEventListener("keydown",this.handleCloseKeyboard),(s=this.popoverEle)==null||s.removeEventListener("keydown",this.handleOptionArrow)}};export{n as default};
