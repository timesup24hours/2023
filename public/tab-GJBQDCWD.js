import{f as e}from"./chunk-YTPAW67S.js";var r="button { color: var(--text-secondary); -webkit-appearance: none; -moz-appearance: none; appearance: none; border: none; background: transparent; padding: 10px 0px; margin-right: 20px; cursor: pointer; position: relative; } button:hover { color: var(--text-primary); } :host([active]) button { color: var(--text-primary); } :host([active]) .indicator { position: absolute; bottom: -1px; left: 0; right: 0; height: 3px; border-radius: 4px; background: var(--color-primary); display: block; }";var n=`<button type="button" role="tab" aria-selected="false" aria-controls="">
  <slot></slot>
  <span class="indicator"></span>
</button>`;var i=class extends HTMLElement{constructor(){super();e(this,"handleTabClick",()=>{let t=new CustomEvent("huanlin-tab-active",{bubbles:!0,detail:{element:this,panel:this.panel}});this.dispatchEvent(t)});e(this,"willLoad",()=>{var t;this.tabEle=(t=this.shadowRoot)==null?void 0:t.querySelector("button"),this.addEventListener("click",this.handleTabClick)});e(this,"render",()=>{this.tabEle.setAttribute("aria-selected",this.active)});let t=this.attachShadow({mode:"open"}),a=new CSSStyleSheet;a.replaceSync(r),t.adoptedStyleSheets=[a],t.innerHTML=n}set panel(t){this.setAttribute("panel",t)}get panel(){return this.getAttribute("panel")||""}set active(t){t?this.setAttribute("active",""):this.removeAttribute("active")}get active(){return!!(this.getAttribute("active")==="true"||this.hasAttribute("active"))}static get observedAttributes(){return["active","panel"]}attributeChangedCallback(t,a,c){}connectedCallback(){this.classList.add("hydrated"),this.willLoad(),this.render()}disconnectedCallback(){this.removeEventListener("click",this.handleTabClick)}};export{i as default};
